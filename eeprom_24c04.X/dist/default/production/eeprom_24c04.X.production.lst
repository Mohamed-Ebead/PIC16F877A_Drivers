

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jul 10 16:21:47 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  000E                     	;# 
   249  000F                     	;# 
   250  0010                     	;# 
   251  0011                     	;# 
   252  0012                     	;# 
   253  0013                     	;# 
   254  0014                     	;# 
   255  0015                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0017                     	;# 
   259  0018                     	;# 
   260  0019                     	;# 
   261  001A                     	;# 
   262  001B                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001D                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  0081                     	;# 
   269  0085                     	;# 
   270  0086                     	;# 
   271  0087                     	;# 
   272  0088                     	;# 
   273  0089                     	;# 
   274  008C                     	;# 
   275  008D                     	;# 
   276  008E                     	;# 
   277  0091                     	;# 
   278  0092                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009C                     	;# 
   284  009D                     	;# 
   285  009E                     	;# 
   286  009F                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293                           
   294                           	psect	idataCOMMON
   295  0687                     __pidataCOMMON:
   296                           
   297                           ;initializer for main@F896
   298  0687  3404               	retlw	4
   299  0688  3404               	retlw	4
   300  0091                     _SSPCON2	set	145
   301                           
   302                           	psect	cinit
   303  07F0                     start_initialization:	
   304                           ; #config settings
   305                           
   306  07F0                     __initialization:
   307                           
   308                           ; Initialize objects allocated to COMMON
   309  07F0  120A  118A  2687  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   310  07F5  00FA               	movwf	__pdataCOMMON& (0+127)
   311  07F6  120A  118A  2688  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   312  07FB  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   313  07FC                     end_of_initialization:	
   314                           ;End of C runtime variable initialization code
   315                           
   316  07FC                     __end_of__initialization:
   317  07FC  0183               	clrf	3
   318  07FD  120A  118A  2EF9   	ljmp	_main	;jump to C main() function
   319                           
   320                           	psect	dataCOMMON
   321  007A                     __pdataCOMMON:
   322  007A                     main@F896:
   323  007A                     	ds	2
   324                           
   325                           	psect	cstackCOMMON
   326  0070                     __pcstackCOMMON:
   327  0070                     ?_I2C_start:
   328  0070                     ??_I2C_start:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ?_I2C_write:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ??_I2C_write:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ?_I2C_stop:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ??_I2C_stop:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_DIO_SetPinDirection:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_EEPROM_Write:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_I2C_init:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_I2C_wait:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ??_I2C_wait:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_main:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     I2C_write@data:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     DIO_SetPinDirection@u8PinIdCopy:	
   365                           ; 1 bytes @ 0x0
   366                           
   367                           
   368                           ; 1 bytes @ 0x0
   369  0070                     	ds	1
   370  0071                     ??_EEPROM_Write:
   371  0071                     EEPROM_Write@data:	
   372                           ; 1 bytes @ 0x1
   373                           
   374  0071                     DIO_SetPinDirection@u8PinDirCopy:	
   375                           ; 1 bytes @ 0x1
   376                           
   377                           
   378                           ; 1 bytes @ 0x1
   379  0071                     	ds	1
   380  0072                     ??_DIO_SetPinDirection:
   381                           
   382                           ; 1 bytes @ 0x2
   383  0072                     	ds	2
   384  0074                     DIO_SetPinDirection@u8PortIdCopy:
   385                           
   386                           ; 1 bytes @ 0x4
   387  0074                     	ds	1
   388  0075                     ??_I2C_init:
   389  0075                     ??_main:	
   390                           ; 1 bytes @ 0x5
   391                           
   392                           
   393                           ; 1 bytes @ 0x5
   394  0075                     	ds	3
   395  0078                     main@arr:
   396                           
   397                           ; 2 bytes @ 0x8
   398  0078                     	ds	2
   399                           
   400                           	psect	maintext
   401  06F9                     __pmaintext:	
   402 ;;
   403 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   404 ;;
   405 ;; *************** function _main *****************
   406 ;; Defined at:
   407 ;;		line 26 in file "main.c"
   408 ;; Parameters:    Size  Location     Type
   409 ;;		None
   410 ;; Auto vars:     Size  Location     Type
   411 ;;  arr             2    8[COMMON] unsigned char [2]
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : B00/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         2       0       0       0       0
   423 ;;      Temps:          3       0       0       0       0
   424 ;;      Totals:         5       0       0       0       0
   425 ;;Total ram usage:        5 bytes
   426 ;; Hardware stack levels required when called:    3
   427 ;; This function calls:
   428 ;;		_EEPROM_Write
   429 ;;		_I2C_init
   430 ;; This function is called by:
   431 ;;		Startup code after reset
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           
   436                           ;psect for function _main
   437  06F9                     _main:
   438  06F9                     l1005:	
   439                           ;incstack = 0
   440                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   441                           
   442                           
   443                           ;main.c: 30:     I2C_init() ;
   444  06F9  120A  118A  26D3  120A  118A  	fcall	_I2C_init
   445  06FE                     l1007:
   446                           
   447                           ;main.c: 31:      _delay((unsigned long)((500)*(20000000/4000.0)));
   448  06FE  300D               	movlw	13
   449  06FF  00F7               	movwf	??_main+2
   450  0700  30AF               	movlw	175
   451  0701  00F6               	movwf	??_main+1
   452  0702  30B6               	movlw	182
   453  0703  00F5               	movwf	??_main
   454  0704                     u417:
   455  0704  0BF5               	decfsz	??_main,f
   456  0705  2F04               	goto	u417
   457  0706  0BF6               	decfsz	??_main+1,f
   458  0707  2F04               	goto	u417
   459  0708  0BF7               	decfsz	??_main+2,f
   460  0709  2F04               	goto	u417
   461  070A  0000               	nop
   462  070B                     l1009:
   463                           
   464                           ;main.c: 33:      u8 arr[2] = {4,4} ;
   465  070B  087B               	movf	main@F896+1,w
   466  070C  00F9               	movwf	main@arr+1
   467  070D  087A               	movf	main@F896,w
   468  070E  00F8               	movwf	main@arr
   469  070F                     l1011:
   470                           
   471                           ;main.c: 38:     {;main.c: 39:         EEPROM_Write(0x72) ;
   472  070F  3072               	movlw	114
   473  0710  120A  118A  26B5  120A  118A  	fcall	_EEPROM_Write
   474  0715                     l1013:
   475                           
   476                           ;main.c: 40:          _delay((unsigned long)((1000)*(20000000/4000.0)));
   477  0715  301A               	movlw	26
   478  0716  00F7               	movwf	??_main+2
   479  0717  305E               	movlw	94
   480  0718  00F6               	movwf	??_main+1
   481  0719  306E               	movlw	110
   482  071A  00F5               	movwf	??_main
   483  071B                     u427:
   484  071B  0BF5               	decfsz	??_main,f
   485  071C  2F1B               	goto	u427
   486  071D  0BF6               	decfsz	??_main+1,f
   487  071E  2F1B               	goto	u427
   488  071F  0BF7               	decfsz	??_main+2,f
   489  0720  2F1B               	goto	u427
   490  0721  0000               	nop
   491  0722  2F0F               	goto	l1011
   492  0723  120A  118A  2800   	ljmp	start
   493  0726                     __end_of_main:
   494                           
   495                           	psect	text1
   496  06D3                     __ptext1:	
   497 ;; *************** function _I2C_init *****************
   498 ;; Defined at:
   499 ;;		line 15 in file "I2c.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;                  1    wreg      void 
   506 ;; Registers used:
   507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0
   515 ;;      Temps:          0       0       0       0       0
   516 ;;      Totals:         0       0       0       0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    1
   520 ;; This function calls:
   521 ;;		_DIO_SetPinDirection
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _I2C_init
   529  06D3                     _I2C_init:
   530  06D3                     l997:	
   531                           ;incstack = 0
   532                           ; Regs used in _I2C_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   533                           
   534                           
   535                           ;I2c.c: 18:     (*((volatile u8*)0x93)) = (20000000/(4*1000000)) - 1;
   536  06D3  3004               	movlw	4
   537  06D4  00FF               	movwf	btemp+1
   538  06D5  087F               	movf	btemp+1,w
   539  06D6  1683               	bsf	3,5	;RP0=1, select bank1
   540  06D7  1303               	bcf	3,6	;RP1=0, select bank1
   541  06D8  0093               	movwf	19	;volatile
   542                           
   543                           ;I2c.c: 20:     (*((volatile u8*)0x14)) = 0b00101000 ;
   544  06D9  3028               	movlw	40
   545  06DA  00FF               	movwf	btemp+1
   546  06DB  087F               	movf	btemp+1,w
   547  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   548  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   549  06DE  0094               	movwf	20	;volatile
   550  06DF                     l999:
   551                           
   552                           ;I2c.c: 24:     (*((volatile u8*)0x94)) = 0x00 ;
   553  06DF  1683               	bsf	3,5	;RP0=1, select bank1
   554  06E0  1303               	bcf	3,6	;RP1=0, select bank1
   555  06E1  0194               	clrf	20	;volatile
   556  06E2                     l1001:
   557                           
   558                           ;I2c.c: 26:     DIO_SetPinDirection(2 , 3 , 0) ;
   559  06E2  3003               	movlw	3
   560  06E3  00FF               	movwf	btemp+1
   561  06E4  087F               	movf	btemp+1,w
   562  06E5  00F0               	movwf	DIO_SetPinDirection@u8PinIdCopy
   563  06E6  01F1               	clrf	DIO_SetPinDirection@u8PinDirCopy
   564  06E7  3002               	movlw	2
   565  06E8  120A  118A  2726  120A  118A  	fcall	_DIO_SetPinDirection
   566  06ED                     l1003:
   567                           
   568                           ;I2c.c: 27:     DIO_SetPinDirection(2 , 4 , 0) ;
   569  06ED  3004               	movlw	4
   570  06EE  00FF               	movwf	btemp+1
   571  06EF  087F               	movf	btemp+1,w
   572  06F0  00F0               	movwf	DIO_SetPinDirection@u8PinIdCopy
   573  06F1  01F1               	clrf	DIO_SetPinDirection@u8PinDirCopy
   574  06F2  3002               	movlw	2
   575  06F3  120A  118A  2726  120A  118A  	fcall	_DIO_SetPinDirection
   576  06F8                     l16:
   577  06F8  0008               	return
   578  06F9                     __end_of_I2C_init:
   579                           
   580                           	psect	text2
   581  0726                     __ptext2:	
   582 ;; *************** function _DIO_SetPinDirection *****************
   583 ;; Defined at:
   584 ;;		line 17 in file "DIO_Prog.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;  u8PortIdCopy    1    wreg     unsigned char 
   587 ;;  u8PinIdCopy     1    0[COMMON] unsigned char 
   588 ;;  u8PinDirCopy    1    1[COMMON] unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  u8PortIdCopy    1    4[COMMON] unsigned char 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  1    wreg      void 
   593 ;; Registers used:
   594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   595 ;; Tracked objects:
   596 ;;		On entry : 0/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         2       0       0       0       0
   601 ;;      Locals:         1       0       0       0       0
   602 ;;      Temps:          2       0       0       0       0
   603 ;;      Totals:         5       0       0       0       0
   604 ;;Total ram usage:        5 bytes
   605 ;; Hardware stack levels used:    1
   606 ;; This function calls:
   607 ;;		Nothing
   608 ;; This function is called by:
   609 ;;		_I2C_init
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           
   614                           ;psect for function _DIO_SetPinDirection
   615  0726                     _DIO_SetPinDirection:
   616                           
   617                           ;incstack = 0
   618                           ; Regs used in _DIO_SetPinDirection: [wreg-fsr0h+status,2+status,0+btemp+1]
   619                           ;DIO_SetPinDirection@u8PortIdCopy stored from wreg
   620  0726  00F4               	movwf	DIO_SetPinDirection@u8PortIdCopy
   621  0727                     l953:
   622                           
   623                           ;DIO_Prog.c: 17: void DIO_SetPinDirection (u8 u8PortIdCopy, u8 u8PinIdCopy, u8 u8PinDirC
      +                          opy);DIO_Prog.c: 18: {;DIO_Prog.c: 20:  if ((u8PortIdCopy <= 3) && (u8PinIdCopy <= 7))
   624  0727  3004               	movlw	4
   625  0728  0274               	subwf	DIO_SetPinDirection@u8PortIdCopy,w
   626  0729  1803               	skipnc
   627  072A  2F2C               	goto	u291
   628  072B  2F2D               	goto	u290
   629  072C                     u291:
   630  072C  2FEF               	goto	l71
   631  072D                     u290:
   632  072D                     l955:
   633  072D  3008               	movlw	8
   634  072E  0270               	subwf	DIO_SetPinDirection@u8PinIdCopy,w
   635  072F  1803               	skipnc
   636  0730  2F32               	goto	u301
   637  0731  2F33               	goto	u300
   638  0732                     u301:
   639  0732  2FEF               	goto	l71
   640  0733                     u300:
   641  0733                     l957:
   642                           
   643                           ;DIO_Prog.c: 21:  {;DIO_Prog.c: 22:   if ( u8PinDirCopy == 1 )
   644  0733  0371               	decf	DIO_SetPinDirection@u8PinDirCopy,w
   645  0734  1D03               	btfss	3,2
   646  0735  2F37               	goto	u311
   647  0736  2F38               	goto	u310
   648  0737                     u311:
   649  0737  2F93               	goto	l973
   650  0738                     u310:
   651  0738  2F7D               	goto	l971
   652  0739                     l961:
   653  0739  3001               	movlw	1
   654  073A  00F2               	movwf	??_DIO_SetPinDirection
   655  073B  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   656  073C  2F3F               	goto	u324
   657  073D                     u325:
   658  073D  1003               	clrc
   659  073E  0DF2               	rlf	??_DIO_SetPinDirection,f
   660  073F                     u324:
   661  073F  3EFF               	addlw	-1
   662  0740  1D03               	skipz
   663  0741  2F3D               	goto	u325
   664  0742  0872               	movf	??_DIO_SetPinDirection,w
   665  0743  3AFF               	xorlw	255
   666  0744  00FF               	movwf	btemp+1
   667  0745  087F               	movf	btemp+1,w
   668  0746  1683               	bsf	3,5	;RP0=1, select bank1
   669  0747  1303               	bcf	3,6	;RP1=0, select bank1
   670  0748  0585               	andwf	5,f	;volatile
   671  0749  2FEF               	goto	l71
   672  074A                     l963:
   673  074A  3001               	movlw	1
   674  074B  00F2               	movwf	??_DIO_SetPinDirection
   675  074C  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   676  074D  2F50               	goto	u334
   677  074E                     u335:
   678  074E  1003               	clrc
   679  074F  0DF2               	rlf	??_DIO_SetPinDirection,f
   680  0750                     u334:
   681  0750  3EFF               	addlw	-1
   682  0751  1D03               	skipz
   683  0752  2F4E               	goto	u335
   684  0753  0872               	movf	??_DIO_SetPinDirection,w
   685  0754  3AFF               	xorlw	255
   686  0755  00FF               	movwf	btemp+1
   687  0756  087F               	movf	btemp+1,w
   688  0757  1683               	bsf	3,5	;RP0=1, select bank1
   689  0758  1303               	bcf	3,6	;RP1=0, select bank1
   690  0759  0586               	andwf	6,f	;volatile
   691  075A  2FEF               	goto	l71
   692  075B                     l965:
   693  075B  3001               	movlw	1
   694  075C  00F2               	movwf	??_DIO_SetPinDirection
   695  075D  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   696  075E  2F61               	goto	u344
   697  075F                     u345:
   698  075F  1003               	clrc
   699  0760  0DF2               	rlf	??_DIO_SetPinDirection,f
   700  0761                     u344:
   701  0761  3EFF               	addlw	-1
   702  0762  1D03               	skipz
   703  0763  2F5F               	goto	u345
   704  0764  0872               	movf	??_DIO_SetPinDirection,w
   705  0765  3AFF               	xorlw	255
   706  0766  00FF               	movwf	btemp+1
   707  0767  087F               	movf	btemp+1,w
   708  0768  1683               	bsf	3,5	;RP0=1, select bank1
   709  0769  1303               	bcf	3,6	;RP1=0, select bank1
   710  076A  0587               	andwf	7,f	;volatile
   711  076B  2FEF               	goto	l71
   712  076C                     l967:
   713  076C  3001               	movlw	1
   714  076D  00F2               	movwf	??_DIO_SetPinDirection
   715  076E  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   716  076F  2F72               	goto	u354
   717  0770                     u355:
   718  0770  1003               	clrc
   719  0771  0DF2               	rlf	??_DIO_SetPinDirection,f
   720  0772                     u354:
   721  0772  3EFF               	addlw	-1
   722  0773  1D03               	skipz
   723  0774  2F70               	goto	u355
   724  0775  0872               	movf	??_DIO_SetPinDirection,w
   725  0776  3AFF               	xorlw	255
   726  0777  00FF               	movwf	btemp+1
   727  0778  087F               	movf	btemp+1,w
   728  0779  1683               	bsf	3,5	;RP0=1, select bank1
   729  077A  1303               	bcf	3,6	;RP1=0, select bank1
   730  077B  0588               	andwf	8,f	;volatile
   731  077C  2FEF               	goto	l71
   732  077D                     l971:
   733  077D  0874               	movf	DIO_SetPinDirection@u8PortIdCopy,w
   734  077E  00F2               	movwf	??_DIO_SetPinDirection
   735  077F  01F3               	clrf	??_DIO_SetPinDirection+1
   736                           
   737                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   738                           ; Switch size 1, requested type "simple"
   739                           ; Number of cases is 1, Range of values is 0 to 0
   740                           ; switch strategies available:
   741                           ; Name         Instructions Cycles
   742                           ; simple_byte            4     3 (average)
   743                           ; direct_byte           11     8 (fixed)
   744                           ; jumptable            260     6 (fixed)
   745                           ;	Chosen strategy is simple_byte
   746  0780  0873               	movf	??_DIO_SetPinDirection+1,w
   747  0781  3A00               	xorlw	0	; case 0
   748  0782  1903               	skipnz
   749  0783  2F85               	goto	l1055
   750  0784  2FEF               	goto	l71
   751  0785                     l1055:
   752                           
   753                           ; Switch size 1, requested type "simple"
   754                           ; Number of cases is 4, Range of values is 0 to 3
   755                           ; switch strategies available:
   756                           ; Name         Instructions Cycles
   757                           ; simple_byte           13     7 (average)
   758                           ; direct_byte           20     8 (fixed)
   759                           ; jumptable            260     6 (fixed)
   760                           ;	Chosen strategy is simple_byte
   761  0785  0872               	movf	??_DIO_SetPinDirection,w
   762  0786  3A00               	xorlw	0	; case 0
   763  0787  1903               	skipnz
   764  0788  2F39               	goto	l961
   765  0789  3A01               	xorlw	1	; case 1
   766  078A  1903               	skipnz
   767  078B  2F4A               	goto	l963
   768  078C  3A03               	xorlw	3	; case 2
   769  078D  1903               	skipnz
   770  078E  2F5B               	goto	l965
   771  078F  3A01               	xorlw	1	; case 3
   772  0790  1903               	skipnz
   773  0791  2F6C               	goto	l967
   774  0792  2FEF               	goto	l71
   775  0793                     l973:
   776  0793  0871               	movf	DIO_SetPinDirection@u8PinDirCopy,w
   777  0794  1D03               	btfss	3,2
   778  0795  2F97               	goto	u361
   779  0796  2F98               	goto	u360
   780  0797                     u361:
   781  0797  2FEF               	goto	l61
   782  0798                     u360:
   783  0798  2FD9               	goto	l987
   784  0799                     l977:
   785  0799  3001               	movlw	1
   786  079A  00F2               	movwf	??_DIO_SetPinDirection
   787  079B  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   788  079C  2F9F               	goto	u374
   789  079D                     u375:
   790  079D  1003               	clrc
   791  079E  0DF2               	rlf	??_DIO_SetPinDirection,f
   792  079F                     u374:
   793  079F  3EFF               	addlw	-1
   794  07A0  1D03               	skipz
   795  07A1  2F9D               	goto	u375
   796  07A2  0872               	movf	??_DIO_SetPinDirection,w
   797  07A3  00FF               	movwf	btemp+1
   798  07A4  087F               	movf	btemp+1,w
   799  07A5  1683               	bsf	3,5	;RP0=1, select bank1
   800  07A6  1303               	bcf	3,6	;RP1=0, select bank1
   801  07A7  0485               	iorwf	5,f	;volatile
   802  07A8  2FEF               	goto	l71
   803  07A9                     l979:
   804  07A9  3001               	movlw	1
   805  07AA  00F2               	movwf	??_DIO_SetPinDirection
   806  07AB  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   807  07AC  2FAF               	goto	u384
   808  07AD                     u385:
   809  07AD  1003               	clrc
   810  07AE  0DF2               	rlf	??_DIO_SetPinDirection,f
   811  07AF                     u384:
   812  07AF  3EFF               	addlw	-1
   813  07B0  1D03               	skipz
   814  07B1  2FAD               	goto	u385
   815  07B2  0872               	movf	??_DIO_SetPinDirection,w
   816  07B3  00FF               	movwf	btemp+1
   817  07B4  087F               	movf	btemp+1,w
   818  07B5  1683               	bsf	3,5	;RP0=1, select bank1
   819  07B6  1303               	bcf	3,6	;RP1=0, select bank1
   820  07B7  0486               	iorwf	6,f	;volatile
   821  07B8  2FEF               	goto	l71
   822  07B9                     l981:
   823  07B9  3001               	movlw	1
   824  07BA  00F2               	movwf	??_DIO_SetPinDirection
   825  07BB  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   826  07BC  2FBF               	goto	u394
   827  07BD                     u395:
   828  07BD  1003               	clrc
   829  07BE  0DF2               	rlf	??_DIO_SetPinDirection,f
   830  07BF                     u394:
   831  07BF  3EFF               	addlw	-1
   832  07C0  1D03               	skipz
   833  07C1  2FBD               	goto	u395
   834  07C2  0872               	movf	??_DIO_SetPinDirection,w
   835  07C3  00FF               	movwf	btemp+1
   836  07C4  087F               	movf	btemp+1,w
   837  07C5  1683               	bsf	3,5	;RP0=1, select bank1
   838  07C6  1303               	bcf	3,6	;RP1=0, select bank1
   839  07C7  0487               	iorwf	7,f	;volatile
   840  07C8  2FEF               	goto	l71
   841  07C9                     l983:
   842  07C9  3001               	movlw	1
   843  07CA  00F2               	movwf	??_DIO_SetPinDirection
   844  07CB  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   845  07CC  2FCF               	goto	u404
   846  07CD                     u405:
   847  07CD  1003               	clrc
   848  07CE  0DF2               	rlf	??_DIO_SetPinDirection,f
   849  07CF                     u404:
   850  07CF  3EFF               	addlw	-1
   851  07D0  1D03               	skipz
   852  07D1  2FCD               	goto	u405
   853  07D2  0872               	movf	??_DIO_SetPinDirection,w
   854  07D3  00FF               	movwf	btemp+1
   855  07D4  087F               	movf	btemp+1,w
   856  07D5  1683               	bsf	3,5	;RP0=1, select bank1
   857  07D6  1303               	bcf	3,6	;RP1=0, select bank1
   858  07D7  0488               	iorwf	8,f	;volatile
   859  07D8  2FEF               	goto	l71
   860  07D9                     l987:
   861  07D9  0874               	movf	DIO_SetPinDirection@u8PortIdCopy,w
   862  07DA  00F2               	movwf	??_DIO_SetPinDirection
   863  07DB  01F3               	clrf	??_DIO_SetPinDirection+1
   864                           
   865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   866                           ; Switch size 1, requested type "simple"
   867                           ; Number of cases is 1, Range of values is 0 to 0
   868                           ; switch strategies available:
   869                           ; Name         Instructions Cycles
   870                           ; simple_byte            4     3 (average)
   871                           ; direct_byte           11     8 (fixed)
   872                           ; jumptable            260     6 (fixed)
   873                           ;	Chosen strategy is simple_byte
   874  07DC  0873               	movf	??_DIO_SetPinDirection+1,w
   875  07DD  3A00               	xorlw	0	; case 0
   876  07DE  1903               	skipnz
   877  07DF  2FE1               	goto	l1057
   878  07E0  2FEF               	goto	l61
   879  07E1                     l1057:
   880                           
   881                           ; Switch size 1, requested type "simple"
   882                           ; Number of cases is 4, Range of values is 0 to 3
   883                           ; switch strategies available:
   884                           ; Name         Instructions Cycles
   885                           ; simple_byte           13     7 (average)
   886                           ; direct_byte           20     8 (fixed)
   887                           ; jumptable            260     6 (fixed)
   888                           ;	Chosen strategy is simple_byte
   889  07E1  0872               	movf	??_DIO_SetPinDirection,w
   890  07E2  3A00               	xorlw	0	; case 0
   891  07E3  1903               	skipnz
   892  07E4  2F99               	goto	l977
   893  07E5  3A01               	xorlw	1	; case 1
   894  07E6  1903               	skipnz
   895  07E7  2FA9               	goto	l979
   896  07E8  3A03               	xorlw	3	; case 2
   897  07E9  1903               	skipnz
   898  07EA  2FB9               	goto	l981
   899  07EB  3A01               	xorlw	1	; case 3
   900  07EC  1903               	skipnz
   901  07ED  2FC9               	goto	l983
   902  07EE  2FEF               	goto	l61
   903  07EF                     l61:
   904  07EF                     l71:	
   905                           ;DIO_Prog.c: 50:  }
   906                           
   907  07EF  0008               	return
   908  07F0                     __end_of_DIO_SetPinDirection:
   909                           
   910                           	psect	text3
   911  06B5                     __ptext3:	
   912 ;; *************** function _EEPROM_Write *****************
   913 ;; Defined at:
   914 ;;		line 9 in file "EEPROM_I2c.c"
   915 ;; Parameters:    Size  Location     Type
   916 ;;  data            1    wreg     unsigned char 
   917 ;; Auto vars:     Size  Location     Type
   918 ;;  data            1    1[COMMON] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  1    wreg      void 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   928 ;;      Params:         0       0       0       0       0
   929 ;;      Locals:         1       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0
   931 ;;      Totals:         1       0       0       0       0
   932 ;;Total ram usage:        1 bytes
   933 ;; Hardware stack levels used:    1
   934 ;; Hardware stack levels required when called:    2
   935 ;; This function calls:
   936 ;;		_I2C_start
   937 ;;		_I2C_stop
   938 ;;		_I2C_write
   939 ;; This function is called by:
   940 ;;		_main
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           
   945                           ;psect for function _EEPROM_Write
   946  06B5                     _EEPROM_Write:
   947                           
   948                           ;incstack = 0
   949                           ; Regs used in _EEPROM_Write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   950                           ;EEPROM_Write@data stored from wreg
   951  06B5  00F1               	movwf	EEPROM_Write@data
   952  06B6                     l775:
   953                           
   954                           ;EEPROM_I2c.c: 9: void EEPROM_Write( uint_8 data);EEPROM_I2c.c: 10: {;EEPROM_I2c.c: 11: 
      +                              I2C_start();
   955  06B6  120A  118A  2689  120A  118A  	fcall	_I2C_start
   956  06BB                     l777:
   957                           
   958                           ;EEPROM_I2c.c: 13:     I2C_write(0xA0) ;
   959  06BB  30A0               	movlw	160
   960  06BC  120A  118A  26A8  120A  118A  	fcall	_I2C_write
   961  06C1                     l779:
   962                           
   963                           ;EEPROM_I2c.c: 14:     I2C_write(0x00);
   964  06C1  3000               	movlw	0
   965  06C2  120A  118A  26A8  120A  118A  	fcall	_I2C_write
   966  06C7                     l781:
   967                           
   968                           ;EEPROM_I2c.c: 15:     I2C_write(data);
   969  06C7  0871               	movf	EEPROM_Write@data,w
   970  06C8  120A  118A  26A8  120A  118A  	fcall	_I2C_write
   971  06CD                     l783:
   972                           
   973                           ;EEPROM_I2c.c: 17:     I2C_stop();
   974  06CD  120A  118A  2692  120A  118A  	fcall	_I2C_stop
   975  06D2                     l9:
   976  06D2  0008               	return
   977  06D3                     __end_of_EEPROM_Write:
   978                           
   979                           	psect	text4
   980  06A8                     __ptext4:	
   981 ;; *************** function _I2C_write *****************
   982 ;; Defined at:
   983 ;;		line 66 in file "I2c.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;  data            1    wreg     unsigned char 
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  data            1    0[COMMON] unsigned char 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         1       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0
  1000 ;;      Totals:         1       0       0       0       0
  1001 ;;Total ram usage:        1 bytes
  1002 ;; Hardware stack levels used:    1
  1003 ;; Hardware stack levels required when called:    1
  1004 ;; This function calls:
  1005 ;;		_I2C_wait
  1006 ;; This function is called by:
  1007 ;;		_EEPROM_Write
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           
  1012                           ;psect for function _I2C_write
  1013  06A8                     _I2C_write:
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _I2C_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1017                           ;I2C_write@data stored from wreg
  1018  06A8  00F0               	movwf	I2C_write@data
  1019  06A9                     l723:
  1020                           
  1021                           ;I2c.c: 66: void I2C_write (uint_8 data);I2c.c: 67: {;I2c.c: 68:     I2C_wait ();
  1022  06A9  120A  118A  269B  120A  118A  	fcall	_I2C_wait
  1023  06AE                     l725:
  1024                           
  1025                           ;I2c.c: 70:   (*((volatile u8*)0x13)) = data ;
  1026  06AE  0870               	movf	I2C_write@data,w
  1027  06AF  00FF               	movwf	btemp+1
  1028  06B0  087F               	movf	btemp+1,w
  1029  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1030  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1031  06B3  0093               	movwf	19	;volatile
  1032  06B4                     l34:
  1033  06B4  0008               	return
  1034  06B5                     __end_of_I2C_write:
  1035                           
  1036                           	psect	text5
  1037  0692                     __ptext5:	
  1038 ;; *************** function _I2C_stop *****************
  1039 ;; Defined at:
  1040 ;;		line 59 in file "I2c.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0, pclath, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1054 ;;      Params:         0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0
  1056 ;;      Temps:          0       0       0       0       0
  1057 ;;      Totals:         0       0       0       0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    1
  1061 ;; This function calls:
  1062 ;;		_I2C_wait
  1063 ;; This function is called by:
  1064 ;;		_EEPROM_Write
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _I2C_stop
  1070  0692                     _I2C_stop:
  1071  0692                     l727:	
  1072                           ;incstack = 0
  1073                           ; Regs used in _I2C_stop: [wreg+status,2+status,0+pclath+cstack]
  1074                           
  1075                           
  1076                           ;I2c.c: 61:     I2C_wait ();
  1077  0692  120A  118A  269B  120A  118A  	fcall	_I2C_wait
  1078  0697                     l729:
  1079                           
  1080                           ;I2c.c: 63: ((*((volatile u8*)0x91))) |= (1 << (2)) ;
  1081  0697  1683               	bsf	3,5	;RP0=1, select bank1
  1082  0698  1303               	bcf	3,6	;RP1=0, select bank1
  1083  0699  1511               	bsf	17,2	;volatile
  1084  069A                     l31:
  1085  069A  0008               	return
  1086  069B                     __end_of_I2C_stop:
  1087                           
  1088                           	psect	text6
  1089  0689                     __ptext6:	
  1090 ;; *************** function _I2C_start *****************
  1091 ;; Defined at:
  1092 ;;		line 43 in file "I2c.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg, status,2, status,0, pclath, cstack
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    1
  1113 ;; This function calls:
  1114 ;;		_I2C_wait
  1115 ;; This function is called by:
  1116 ;;		_EEPROM_Write
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function _I2C_start
  1122  0689                     _I2C_start:
  1123  0689                     l719:	
  1124                           ;incstack = 0
  1125                           ; Regs used in _I2C_start: [wreg+status,2+status,0+pclath+cstack]
  1126                           
  1127                           
  1128                           ;I2c.c: 48:     I2C_wait() ;
  1129  0689  120A  118A  269B  120A  118A  	fcall	_I2C_wait
  1130  068E                     l721:
  1131                           
  1132                           ;I2c.c: 49:     ((*((volatile u8*)0x91))) |= (1 << (0)) ;
  1133  068E  1683               	bsf	3,5	;RP0=1, select bank1
  1134  068F  1303               	bcf	3,6	;RP1=0, select bank1
  1135  0690  1411               	bsf	17,0	;volatile
  1136  0691                     l25:
  1137  0691  0008               	return
  1138  0692                     __end_of_I2C_start:
  1139                           
  1140                           	psect	text7
  1141  069B                     __ptext7:	
  1142 ;; *************** function _I2C_wait *****************
  1143 ;; Defined at:
  1144 ;;		line 37 in file "I2c.c"
  1145 ;; Parameters:    Size  Location     Type
  1146 ;;		None
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;		None
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         0       0       0       0       0
  1159 ;;      Locals:         0       0       0       0       0
  1160 ;;      Temps:          0       0       0       0       0
  1161 ;;      Totals:         0       0       0       0       0
  1162 ;;Total ram usage:        0 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_I2C_start
  1168 ;;		_I2C_stop
  1169 ;;		_I2C_write
  1170 ;;		_I2C_repeated_start
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _I2C_wait
  1176  069B                     _I2C_wait:
  1177  069B                     l715:	
  1178                           ;incstack = 0
  1179                           ; Regs used in _I2C_wait: [wreg+status,2]
  1180                           
  1181  069B                     l19:	
  1182                           ;I2c.c: 40: while ( ((*((volatile u8*)0x94)) & 0x04) || ((*((volatile u8*)0x91)) & 0x1F)
      +                          ) ;
  1183                           
  1184  069B  1683               	bsf	3,5	;RP0=1, select bank1
  1185  069C  1303               	bcf	3,6	;RP1=0, select bank1
  1186  069D  1914               	btfsc	20,2	;volatile
  1187  069E  2EA0               	goto	u11
  1188  069F  2EA1               	goto	u10
  1189  06A0                     u11:
  1190  06A0  2E9B               	goto	l19
  1191  06A1                     u10:
  1192  06A1                     l717:
  1193  06A1  0811               	movf	17,w	;volatile
  1194  06A2  391F               	andlw	31
  1195  06A3  1D03               	btfss	3,2
  1196  06A4  2EA6               	goto	u21
  1197  06A5  2EA7               	goto	u20
  1198  06A6                     u21:
  1199  06A6  2E9B               	goto	l19
  1200  06A7                     u20:
  1201  06A7                     l22:
  1202  06A7  0008               	return
  1203  06A8                     __end_of_I2C_wait:
  1204  007E                     btemp	set	126	;btemp
  1205  007E                     wtemp0	set	126
  1206                           
  1207                           	psect	config
  1208                           
  1209                           ;Config register CONFIG @ 0x2007
  1210                           ;	Oscillator Selection bits
  1211                           ;	FOSC = XT, XT oscillator
  1212                           ;	Watchdog Timer Enable bit
  1213                           ;	WDTE = OFF, WDT disabled
  1214                           ;	Power-up Timer Enable bit
  1215                           ;	PWRTE = ON, PWRT enabled
  1216                           ;	Brown-out Reset Enable bit
  1217                           ;	BOREN = ON, BOR enabled
  1218                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1219                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1220                           ;	Data EEPROM Memory Code Protection bit
  1221                           ;	CPD = OFF, Data EEPROM code protection off
  1222                           ;	Flash Program Memory Write Enable bits
  1223                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1224                           ;	In-Circuit Debugger Mode bit
  1225                           ;	DEBUG = 0x1, unprogrammed default
  1226                           ;	Flash Program Memory Code Protection bit
  1227                           ;	CP = OFF, Code protection off
  1228  2007                     	org	8199
  1229  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _I2C_init->_DIO_SetPinDirection
    _EEPROM_Write->_I2C_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     643
                                              5 COMMON     5     5      0
                       _EEPROM_Write
                           _I2C_init
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             0     0      0     612
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPinDirection                                  5     3      2     612
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Write                                         1     1      0      30
                                              1 COMMON     1     1      0
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
                           _I2C_wait
 ---------------------------------------------------------------------------------
 (3) _I2C_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Write
     _I2C_start
       _I2C_wait
     _I2C_stop
       _I2C_wait
     _I2C_write
       _I2C_wait
   _I2C_init
     _DIO_SetPinDirection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       C      12        0.0%
ABS                  0      0       C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jul 10 16:21:47 2020

                              l9 06D2                               l22 06A7                               l31 069A  
                             l16 06F8                               l25 0691                               l34 06B4  
                             l19 069B                               l61 07EF                               l71 07EF  
                             u10 06A1                               u11 06A0                               u20 06A7  
                             u21 06A6               __size_of_I2C_start 0009               __size_of_I2C_write 000D  
                            l721 068E                              l715 069B                              l723 06A9  
                            l717 06A1                              l725 06AE                              l719 0689  
                            l727 0692                              l729 0697                              l781 06C7  
                            l783 06CD                              l775 06B6                              l777 06BB  
                            l961 0739                              l953 0727                              l779 06C1  
                            l963 074A                              l971 077D                              l955 072D  
                            l981 07B9                              l965 075B                              l973 0793  
                            l957 0733                              l983 07C9                              l967 076C  
                            l977 0799                              l979 07A9                              l987 07D9  
                            l997 06D3                              l999 06DF                              u300 0733  
                            u301 0732                              u310 0738                              u311 0737  
                            u404 07CF                              u324 073F                              u405 07CD  
                            u325 073D                              u334 0750                              u335 074E  
                            u360 0798                              u344 0761                              u361 0797  
                            u345 075F                              u417 0704                              u354 0772  
                            u290 072D                              u355 0770                              u291 072C  
                            u427 071B                              u374 079F                              u375 079D  
                            u384 07AF                              u385 07AD                              u394 07BF  
                            u395 07BD                             l1001 06E2                             l1003 06ED  
                           l1011 070F                             l1013 0715                             l1005 06F9  
                           l1007 06FE                             l1009 070B                             l1055 0785  
                           l1057 07E1                             _main 06F9                             btemp 007E  
               __end_of_I2C_init 06F9                 __end_of_I2C_wait 06A8                             start 0000  
               __end_of_I2C_stop 069B             __end_of_EEPROM_Write 06D3                    I2C_write@data 0070  
                          ?_main 0070                            status 0003                __end_of_I2C_start 0692  
                          wtemp0 007E                __end_of_I2C_write 06B5                 EEPROM_Write@data 0071  
                __initialization 07F0                     __end_of_main 0726   DIO_SetPinDirection@u8PinIdCopy 0070  
                         ??_main 0075     __size_of_DIO_SetPinDirection 00CA                     __pdataCOMMON 007A  
                      ?_I2C_init 0070                        ?_I2C_wait 0070                        ?_I2C_stop 0070  
        __end_of__initialization 07FC            __size_of_EEPROM_Write 001E                   __pcstackCOMMON 0070  
                     ??_I2C_init 0075                       ??_I2C_wait 0070                       ??_I2C_stop 0070  
                   _EEPROM_Write 06B5                       __pmaintext 06F9                          _SSPCON2 0091  
                      _I2C_start 0689                        _I2C_write 06A8              _DIO_SetPinDirection 0726  
                        __ptext1 06D3                          __ptext2 0726                          __ptext3 06B5  
                        __ptext4 06A8                          __ptext5 0692                          __ptext6 0689  
                        __ptext7 069B                          main@arr 0078             end_of_initialization 07FC  
           ?_DIO_SetPinDirection 0070                       ?_I2C_start 0070                       ?_I2C_write 0070  
              __size_of_I2C_init 0026                __size_of_I2C_wait 000D                __size_of_I2C_stop 0009  
          ??_DIO_SetPinDirection 0072                    __pidataCOMMON 0687              start_initialization 07F0  
                    ??_I2C_start 0070                      ??_I2C_write 0070                        ___latbits 0002  
                       _I2C_init 06D3                         _I2C_wait 069B                         _I2C_stop 0692  
    __end_of_DIO_SetPinDirection 07F0                    ?_EEPROM_Write 0070                    __size_of_main 002D  
                       main@F896 007A  DIO_SetPinDirection@u8PinDirCopy 0071                   ??_EEPROM_Write 0071  
DIO_SetPinDirection@u8PortIdCopy 0074  
