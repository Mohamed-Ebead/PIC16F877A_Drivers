

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jul 10 16:29:39 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233                           
   234                           	psect	idataCOMMON
   235  0689                     __pidataCOMMON:
   236                           
   237                           ;initializer for main@F888
   238  0689  3464               	retlw	100
   239  068A  345A               	retlw	90
   240                           
   241                           	psect	cinit
   242  07F0                     start_initialization:	
   243                           ; #config settings
   244                           
   245  07F0                     __initialization:
   246                           
   247                           ; Initialize objects allocated to COMMON
   248  07F0  120A  118A  2689  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   249  07F5  00F9               	movwf	__pdataCOMMON& (0+127)
   250  07F6  120A  118A  268A  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   251  07FB  00FA               	movwf	(__pdataCOMMON+1)& (0+127)
   252  07FC                     end_of_initialization:	
   253                           ;End of C runtime variable initialization code
   254                           
   255  07FC                     __end_of__initialization:
   256  07FC  0183               	clrf	3
   257  07FD  120A  118A  2EDB   	ljmp	_main	;jump to C main() function
   258                           
   259                           	psect	dataCOMMON
   260  0079                     __pdataCOMMON:
   261  0079                     main@F888:
   262  0079                     	ds	2
   263                           
   264                           	psect	cstackCOMMON
   265  0070                     __pcstackCOMMON:
   266  0070                     ?_DIO_SetPinDirection:
   267  0070                     ?_EEPROM_WriteToEEPROM:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0070                     ?_I2C_Init:	
   271                           ; 1 bytes @ 0x0
   272                           
   273  0070                     ?_I2C_Hold:	
   274                           ; 1 bytes @ 0x0
   275                           
   276  0070                     ??_I2C_Hold:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_I2CBegin:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ??_I2CBegin:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ?_I2C_End:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ??_I2C_End:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_I2C_Write:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     ??_I2C_Write:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_main:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     I2C_Write@u8_Data:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     DIO_SetPinDirection@u8PinIdCopy:	
   304                           ; 1 bytes @ 0x0
   305                           
   306                           
   307                           ; 1 bytes @ 0x0
   308  0070                     	ds	1
   309  0071                     ??_EEPROM_WriteToEEPROM:
   310  0071                     DIO_SetPinDirection@u8PinDirCopy:	
   311                           ; 1 bytes @ 0x1
   312                           
   313  0071                     EEPROM_WriteToEEPROM@u8_Data:	
   314                           ; 1 bytes @ 0x1
   315                           
   316                           
   317                           ; 1 bytes @ 0x1
   318  0071                     	ds	1
   319  0072                     ??_DIO_SetPinDirection:
   320                           
   321                           ; 1 bytes @ 0x2
   322  0072                     	ds	2
   323  0074                     DIO_SetPinDirection@u8PortIdCopy:
   324                           
   325                           ; 1 bytes @ 0x4
   326  0074                     	ds	1
   327  0075                     ??_I2C_Init:
   328  0075                     ??_main:	
   329                           ; 1 bytes @ 0x5
   330                           
   331                           
   332                           ; 1 bytes @ 0x5
   333  0075                     	ds	2
   334  0077                     main@arr:
   335                           
   336                           ; 2 bytes @ 0x7
   337  0077                     	ds	2
   338                           
   339                           	psect	maintext
   340  06DB                     __pmaintext:	
   341 ;;
   342 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   343 ;;
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 25 in file "main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;  arr             2    7[COMMON] unsigned char [2]
   351 ;; Return value:  Size  Location     Type
   352 ;;                  1    wreg      void 
   353 ;; Registers used:
   354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : B00/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         2       0       0       0       0
   362 ;;      Temps:          2       0       0       0       0
   363 ;;      Totals:         4       0       0       0       0
   364 ;;Total ram usage:        4 bytes
   365 ;; Hardware stack levels required when called:    3
   366 ;; This function calls:
   367 ;;		_EEPROM_WriteToEEPROM
   368 ;;		_I2C_Init
   369 ;; This function is called by:
   370 ;;		Startup code after reset
   371 ;; This function uses a non-reentrant model
   372 ;;
   373                           
   374                           
   375                           ;psect for function _main
   376  06DB                     _main:
   377  06DB                     l1026:	
   378                           ;incstack = 0
   379                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   380                           
   381                           
   382                           ;main.c: 29:     I2C_Init() ;
   383  06DB  120A  118A  2700  120A  118A  	fcall	_I2C_Init
   384  06E0                     l1028:
   385                           
   386                           ;main.c: 30:      _delay((unsigned long)((500)*(400000/4000.0)));
   387  06E0  3041               	movlw	65
   388  06E1  00F6               	movwf	??_main+1
   389  06E2  30EE               	movlw	238
   390  06E3  00F5               	movwf	??_main
   391  06E4                     u427:
   392  06E4  0BF5               	decfsz	??_main,f
   393  06E5  2EE4               	goto	u427
   394  06E6  0BF6               	decfsz	??_main+1,f
   395  06E7  2EE4               	goto	u427
   396  06E8  0000               	nop
   397  06E9                     l1030:
   398                           
   399                           ;main.c: 32:      u8 arr[2] = {100,90} ;
   400  06E9  087A               	movf	main@F888+1,w
   401  06EA  00F8               	movwf	main@arr+1
   402  06EB  0879               	movf	main@F888,w
   403  06EC  00F7               	movwf	main@arr
   404  06ED                     l1032:
   405                           
   406                           ;main.c: 37:     {;main.c: 38:         EEPROM_WriteToEEPROM(0xFF) ;
   407  06ED  30FF               	movlw	255
   408  06EE  120A  118A  26B7  120A  118A  	fcall	_EEPROM_WriteToEEPROM
   409  06F3                     l1034:
   410                           
   411                           ;main.c: 39:          _delay((unsigned long)((1000)*(400000/4000.0)));
   412  06F3  3082               	movlw	130
   413  06F4  00F6               	movwf	??_main+1
   414  06F5  30DD               	movlw	221
   415  06F6  00F5               	movwf	??_main
   416  06F7                     u437:
   417  06F7  0BF5               	decfsz	??_main,f
   418  06F8  2EF7               	goto	u437
   419  06F9  0BF6               	decfsz	??_main+1,f
   420  06FA  2EF7               	goto	u437
   421  06FB  2EFC               	nop2
   422  06FC  2EED               	goto	l1032
   423  06FD  120A  118A  2800   	ljmp	start
   424  0700                     __end_of_main:
   425                           
   426                           	psect	text1
   427  0700                     __ptext1:	
   428 ;; *************** function _I2C_Init *****************
   429 ;; Defined at:
   430 ;;		line 16 in file "I2C_Prog.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels used:    1
   450 ;; Hardware stack levels required when called:    1
   451 ;; This function calls:
   452 ;;		_DIO_SetPinDirection
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           
   459                           ;psect for function _I2C_Init
   460  0700                     _I2C_Init:
   461  0700                     l1018:	
   462                           ;incstack = 0
   463                           ; Regs used in _I2C_Init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   464                           
   465                           
   466                           ;I2C_Prog.c: 19:     (*((volatile u8*)0x93)) = (20000000/(4*1000000)) - 1;
   467  0700  3004               	movlw	4
   468  0701  00FF               	movwf	btemp+1
   469  0702  087F               	movf	btemp+1,w
   470  0703  1683               	bsf	3,5	;RP0=1, select bank1
   471  0704  1303               	bcf	3,6	;RP1=0, select bank1
   472  0705  0093               	movwf	19	;volatile
   473                           
   474                           ;I2C_Prog.c: 21:     (*((volatile u8*)0x14)) = 0b00101000 ;
   475  0706  3028               	movlw	40
   476  0707  00FF               	movwf	btemp+1
   477  0708  087F               	movf	btemp+1,w
   478  0709  1283               	bcf	3,5	;RP0=0, select bank0
   479  070A  1303               	bcf	3,6	;RP1=0, select bank0
   480  070B  0094               	movwf	20	;volatile
   481  070C                     l1020:
   482                           
   483                           ;I2C_Prog.c: 25:     (*((volatile u8*)0x94)) = 0x00 ;
   484  070C  1683               	bsf	3,5	;RP0=1, select bank1
   485  070D  1303               	bcf	3,6	;RP1=0, select bank1
   486  070E  0194               	clrf	20	;volatile
   487  070F                     l1022:
   488                           
   489                           ;I2C_Prog.c: 27:     DIO_SetPinDirection(2 , 3 , 0) ;
   490  070F  3003               	movlw	3
   491  0710  00FF               	movwf	btemp+1
   492  0711  087F               	movf	btemp+1,w
   493  0712  00F0               	movwf	DIO_SetPinDirection@u8PinIdCopy
   494  0713  01F1               	clrf	DIO_SetPinDirection@u8PinDirCopy
   495  0714  3002               	movlw	2
   496  0715  120A  118A  2726  120A  118A  	fcall	_DIO_SetPinDirection
   497  071A                     l1024:
   498                           
   499                           ;I2C_Prog.c: 28:     DIO_SetPinDirection(2 , 4 , 0) ;
   500  071A  3004               	movlw	4
   501  071B  00FF               	movwf	btemp+1
   502  071C  087F               	movf	btemp+1,w
   503  071D  00F0               	movwf	DIO_SetPinDirection@u8PinIdCopy
   504  071E  01F1               	clrf	DIO_SetPinDirection@u8PinDirCopy
   505  071F  3002               	movlw	2
   506  0720  120A  118A  2726  120A  118A  	fcall	_DIO_SetPinDirection
   507  0725                     l5:
   508  0725  0008               	return
   509  0726                     __end_of_I2C_Init:
   510                           
   511                           	psect	text2
   512  0726                     __ptext2:	
   513 ;; *************** function _DIO_SetPinDirection *****************
   514 ;; Defined at:
   515 ;;		line 17 in file "../External_Interrupt.X/DIO_Prog.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  u8PortIdCopy    1    wreg     unsigned char 
   518 ;;  u8PinIdCopy     1    0[COMMON] unsigned char 
   519 ;;  u8PinDirCopy    1    1[COMMON] unsigned char 
   520 ;; Auto vars:     Size  Location     Type
   521 ;;  u8PortIdCopy    1    4[COMMON] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   531 ;;      Params:         2       0       0       0       0
   532 ;;      Locals:         1       0       0       0       0
   533 ;;      Temps:          2       0       0       0       0
   534 ;;      Totals:         5       0       0       0       0
   535 ;;Total ram usage:        5 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; This function calls:
   538 ;;		Nothing
   539 ;; This function is called by:
   540 ;;		_I2C_Init
   541 ;; This function uses a non-reentrant model
   542 ;;
   543                           
   544                           
   545                           ;psect for function _DIO_SetPinDirection
   546  0726                     _DIO_SetPinDirection:
   547                           
   548                           ;incstack = 0
   549                           ; Regs used in _DIO_SetPinDirection: [wreg-fsr0h+status,2+status,0+btemp+1]
   550                           ;DIO_SetPinDirection@u8PortIdCopy stored from wreg
   551  0726  00F4               	movwf	DIO_SetPinDirection@u8PortIdCopy
   552  0727                     l974:
   553                           
   554                           ;../External_Interrupt.X/DIO_Prog.c: 17: void DIO_SetPinDirection (u8 u8PortIdCopy, u8 u
      +                          8PinIdCopy, u8 u8PinDirCopy);../External_Interrupt.X/DIO_Prog.c: 18: {;../External_Inter
      +                          rupt.X/DIO_Prog.c: 20:  if ((u8PortIdCopy <= 3) && (u8PinIdCopy <= 7))
   555  0727  3004               	movlw	4
   556  0728  0274               	subwf	DIO_SetPinDirection@u8PortIdCopy,w
   557  0729  1803               	skipnc
   558  072A  2F2C               	goto	u301
   559  072B  2F2D               	goto	u300
   560  072C                     u301:
   561  072C  2FEF               	goto	l65
   562  072D                     u300:
   563  072D                     l976:
   564  072D  3008               	movlw	8
   565  072E  0270               	subwf	DIO_SetPinDirection@u8PinIdCopy,w
   566  072F  1803               	skipnc
   567  0730  2F32               	goto	u311
   568  0731  2F33               	goto	u310
   569  0732                     u311:
   570  0732  2FEF               	goto	l65
   571  0733                     u310:
   572  0733                     l978:
   573                           
   574                           ;../External_Interrupt.X/DIO_Prog.c: 21:  {;../External_Interrupt.X/DIO_Prog.c: 22:   if
      +                           ( u8PinDirCopy == 1 )
   575  0733  0371               	decf	DIO_SetPinDirection@u8PinDirCopy,w
   576  0734  1D03               	btfss	3,2
   577  0735  2F37               	goto	u321
   578  0736  2F38               	goto	u320
   579  0737                     u321:
   580  0737  2F93               	goto	l994
   581  0738                     u320:
   582  0738  2F7D               	goto	l992
   583  0739                     l982:
   584  0739  3001               	movlw	1
   585  073A  00F2               	movwf	??_DIO_SetPinDirection
   586  073B  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   587  073C  2F3F               	goto	u334
   588  073D                     u335:
   589  073D  1003               	clrc
   590  073E  0DF2               	rlf	??_DIO_SetPinDirection,f
   591  073F                     u334:
   592  073F  3EFF               	addlw	-1
   593  0740  1D03               	skipz
   594  0741  2F3D               	goto	u335
   595  0742  0872               	movf	??_DIO_SetPinDirection,w
   596  0743  3AFF               	xorlw	255
   597  0744  00FF               	movwf	btemp+1
   598  0745  087F               	movf	btemp+1,w
   599  0746  1683               	bsf	3,5	;RP0=1, select bank1
   600  0747  1303               	bcf	3,6	;RP1=0, select bank1
   601  0748  0585               	andwf	5,f	;volatile
   602  0749  2FEF               	goto	l65
   603  074A                     l984:
   604  074A  3001               	movlw	1
   605  074B  00F2               	movwf	??_DIO_SetPinDirection
   606  074C  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   607  074D  2F50               	goto	u344
   608  074E                     u345:
   609  074E  1003               	clrc
   610  074F  0DF2               	rlf	??_DIO_SetPinDirection,f
   611  0750                     u344:
   612  0750  3EFF               	addlw	-1
   613  0751  1D03               	skipz
   614  0752  2F4E               	goto	u345
   615  0753  0872               	movf	??_DIO_SetPinDirection,w
   616  0754  3AFF               	xorlw	255
   617  0755  00FF               	movwf	btemp+1
   618  0756  087F               	movf	btemp+1,w
   619  0757  1683               	bsf	3,5	;RP0=1, select bank1
   620  0758  1303               	bcf	3,6	;RP1=0, select bank1
   621  0759  0586               	andwf	6,f	;volatile
   622  075A  2FEF               	goto	l65
   623  075B                     l986:
   624  075B  3001               	movlw	1
   625  075C  00F2               	movwf	??_DIO_SetPinDirection
   626  075D  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   627  075E  2F61               	goto	u354
   628  075F                     u355:
   629  075F  1003               	clrc
   630  0760  0DF2               	rlf	??_DIO_SetPinDirection,f
   631  0761                     u354:
   632  0761  3EFF               	addlw	-1
   633  0762  1D03               	skipz
   634  0763  2F5F               	goto	u355
   635  0764  0872               	movf	??_DIO_SetPinDirection,w
   636  0765  3AFF               	xorlw	255
   637  0766  00FF               	movwf	btemp+1
   638  0767  087F               	movf	btemp+1,w
   639  0768  1683               	bsf	3,5	;RP0=1, select bank1
   640  0769  1303               	bcf	3,6	;RP1=0, select bank1
   641  076A  0587               	andwf	7,f	;volatile
   642  076B  2FEF               	goto	l65
   643  076C                     l988:
   644  076C  3001               	movlw	1
   645  076D  00F2               	movwf	??_DIO_SetPinDirection
   646  076E  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   647  076F  2F72               	goto	u364
   648  0770                     u365:
   649  0770  1003               	clrc
   650  0771  0DF2               	rlf	??_DIO_SetPinDirection,f
   651  0772                     u364:
   652  0772  3EFF               	addlw	-1
   653  0773  1D03               	skipz
   654  0774  2F70               	goto	u365
   655  0775  0872               	movf	??_DIO_SetPinDirection,w
   656  0776  3AFF               	xorlw	255
   657  0777  00FF               	movwf	btemp+1
   658  0778  087F               	movf	btemp+1,w
   659  0779  1683               	bsf	3,5	;RP0=1, select bank1
   660  077A  1303               	bcf	3,6	;RP1=0, select bank1
   661  077B  0588               	andwf	8,f	;volatile
   662  077C  2FEF               	goto	l65
   663  077D                     l992:
   664  077D  0874               	movf	DIO_SetPinDirection@u8PortIdCopy,w
   665  077E  00F2               	movwf	??_DIO_SetPinDirection
   666  077F  01F3               	clrf	??_DIO_SetPinDirection+1
   667                           
   668                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   669                           ; Switch size 1, requested type "simple"
   670                           ; Number of cases is 1, Range of values is 0 to 0
   671                           ; switch strategies available:
   672                           ; Name         Instructions Cycles
   673                           ; simple_byte            4     3 (average)
   674                           ; direct_byte           11     8 (fixed)
   675                           ; jumptable            260     6 (fixed)
   676                           ;	Chosen strategy is simple_byte
   677  0780  0873               	movf	??_DIO_SetPinDirection+1,w
   678  0781  3A00               	xorlw	0	; case 0
   679  0782  1903               	skipnz
   680  0783  2F85               	goto	l1076
   681  0784  2FEF               	goto	l65
   682  0785                     l1076:
   683                           
   684                           ; Switch size 1, requested type "simple"
   685                           ; Number of cases is 4, Range of values is 0 to 3
   686                           ; switch strategies available:
   687                           ; Name         Instructions Cycles
   688                           ; simple_byte           13     7 (average)
   689                           ; direct_byte           20     8 (fixed)
   690                           ; jumptable            260     6 (fixed)
   691                           ;	Chosen strategy is simple_byte
   692  0785  0872               	movf	??_DIO_SetPinDirection,w
   693  0786  3A00               	xorlw	0	; case 0
   694  0787  1903               	skipnz
   695  0788  2F39               	goto	l982
   696  0789  3A01               	xorlw	1	; case 1
   697  078A  1903               	skipnz
   698  078B  2F4A               	goto	l984
   699  078C  3A03               	xorlw	3	; case 2
   700  078D  1903               	skipnz
   701  078E  2F5B               	goto	l986
   702  078F  3A01               	xorlw	1	; case 3
   703  0790  1903               	skipnz
   704  0791  2F6C               	goto	l988
   705  0792  2FEF               	goto	l65
   706  0793                     l994:
   707  0793  0871               	movf	DIO_SetPinDirection@u8PinDirCopy,w
   708  0794  1D03               	btfss	3,2
   709  0795  2F97               	goto	u371
   710  0796  2F98               	goto	u370
   711  0797                     u371:
   712  0797  2FEF               	goto	l55
   713  0798                     u370:
   714  0798  2FD9               	goto	l1008
   715  0799                     l998:
   716  0799  3001               	movlw	1
   717  079A  00F2               	movwf	??_DIO_SetPinDirection
   718  079B  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   719  079C  2F9F               	goto	u384
   720  079D                     u385:
   721  079D  1003               	clrc
   722  079E  0DF2               	rlf	??_DIO_SetPinDirection,f
   723  079F                     u384:
   724  079F  3EFF               	addlw	-1
   725  07A0  1D03               	skipz
   726  07A1  2F9D               	goto	u385
   727  07A2  0872               	movf	??_DIO_SetPinDirection,w
   728  07A3  00FF               	movwf	btemp+1
   729  07A4  087F               	movf	btemp+1,w
   730  07A5  1683               	bsf	3,5	;RP0=1, select bank1
   731  07A6  1303               	bcf	3,6	;RP1=0, select bank1
   732  07A7  0485               	iorwf	5,f	;volatile
   733  07A8  2FEF               	goto	l65
   734  07A9                     l1000:
   735  07A9  3001               	movlw	1
   736  07AA  00F2               	movwf	??_DIO_SetPinDirection
   737  07AB  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   738  07AC  2FAF               	goto	u394
   739  07AD                     u395:
   740  07AD  1003               	clrc
   741  07AE  0DF2               	rlf	??_DIO_SetPinDirection,f
   742  07AF                     u394:
   743  07AF  3EFF               	addlw	-1
   744  07B0  1D03               	skipz
   745  07B1  2FAD               	goto	u395
   746  07B2  0872               	movf	??_DIO_SetPinDirection,w
   747  07B3  00FF               	movwf	btemp+1
   748  07B4  087F               	movf	btemp+1,w
   749  07B5  1683               	bsf	3,5	;RP0=1, select bank1
   750  07B6  1303               	bcf	3,6	;RP1=0, select bank1
   751  07B7  0486               	iorwf	6,f	;volatile
   752  07B8  2FEF               	goto	l65
   753  07B9                     l1002:
   754  07B9  3001               	movlw	1
   755  07BA  00F2               	movwf	??_DIO_SetPinDirection
   756  07BB  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   757  07BC  2FBF               	goto	u404
   758  07BD                     u405:
   759  07BD  1003               	clrc
   760  07BE  0DF2               	rlf	??_DIO_SetPinDirection,f
   761  07BF                     u404:
   762  07BF  3EFF               	addlw	-1
   763  07C0  1D03               	skipz
   764  07C1  2FBD               	goto	u405
   765  07C2  0872               	movf	??_DIO_SetPinDirection,w
   766  07C3  00FF               	movwf	btemp+1
   767  07C4  087F               	movf	btemp+1,w
   768  07C5  1683               	bsf	3,5	;RP0=1, select bank1
   769  07C6  1303               	bcf	3,6	;RP1=0, select bank1
   770  07C7  0487               	iorwf	7,f	;volatile
   771  07C8  2FEF               	goto	l65
   772  07C9                     l1004:
   773  07C9  3001               	movlw	1
   774  07CA  00F2               	movwf	??_DIO_SetPinDirection
   775  07CB  0A70               	incf	DIO_SetPinDirection@u8PinIdCopy,w
   776  07CC  2FCF               	goto	u414
   777  07CD                     u415:
   778  07CD  1003               	clrc
   779  07CE  0DF2               	rlf	??_DIO_SetPinDirection,f
   780  07CF                     u414:
   781  07CF  3EFF               	addlw	-1
   782  07D0  1D03               	skipz
   783  07D1  2FCD               	goto	u415
   784  07D2  0872               	movf	??_DIO_SetPinDirection,w
   785  07D3  00FF               	movwf	btemp+1
   786  07D4  087F               	movf	btemp+1,w
   787  07D5  1683               	bsf	3,5	;RP0=1, select bank1
   788  07D6  1303               	bcf	3,6	;RP1=0, select bank1
   789  07D7  0488               	iorwf	8,f	;volatile
   790  07D8  2FEF               	goto	l65
   791  07D9                     l1008:
   792  07D9  0874               	movf	DIO_SetPinDirection@u8PortIdCopy,w
   793  07DA  00F2               	movwf	??_DIO_SetPinDirection
   794  07DB  01F3               	clrf	??_DIO_SetPinDirection+1
   795                           
   796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   797                           ; Switch size 1, requested type "simple"
   798                           ; Number of cases is 1, Range of values is 0 to 0
   799                           ; switch strategies available:
   800                           ; Name         Instructions Cycles
   801                           ; simple_byte            4     3 (average)
   802                           ; direct_byte           11     8 (fixed)
   803                           ; jumptable            260     6 (fixed)
   804                           ;	Chosen strategy is simple_byte
   805  07DC  0873               	movf	??_DIO_SetPinDirection+1,w
   806  07DD  3A00               	xorlw	0	; case 0
   807  07DE  1903               	skipnz
   808  07DF  2FE1               	goto	l1078
   809  07E0  2FEF               	goto	l55
   810  07E1                     l1078:
   811                           
   812                           ; Switch size 1, requested type "simple"
   813                           ; Number of cases is 4, Range of values is 0 to 3
   814                           ; switch strategies available:
   815                           ; Name         Instructions Cycles
   816                           ; simple_byte           13     7 (average)
   817                           ; direct_byte           20     8 (fixed)
   818                           ; jumptable            260     6 (fixed)
   819                           ;	Chosen strategy is simple_byte
   820  07E1  0872               	movf	??_DIO_SetPinDirection,w
   821  07E2  3A00               	xorlw	0	; case 0
   822  07E3  1903               	skipnz
   823  07E4  2F99               	goto	l998
   824  07E5  3A01               	xorlw	1	; case 1
   825  07E6  1903               	skipnz
   826  07E7  2FA9               	goto	l1000
   827  07E8  3A03               	xorlw	3	; case 2
   828  07E9  1903               	skipnz
   829  07EA  2FB9               	goto	l1002
   830  07EB  3A01               	xorlw	1	; case 3
   831  07EC  1903               	skipnz
   832  07ED  2FC9               	goto	l1004
   833  07EE  2FEF               	goto	l55
   834  07EF                     l55:
   835  07EF                     l65:	
   836                           ;../External_Interrupt.X/DIO_Prog.c: 50:  }
   837                           
   838  07EF  0008               	return
   839  07F0                     __end_of_DIO_SetPinDirection:
   840                           
   841                           	psect	text3
   842  06B7                     __ptext3:	
   843 ;; *************** function _EEPROM_WriteToEEPROM *****************
   844 ;; Defined at:
   845 ;;		line 26 in file "EEPROM_Prog.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;  u8_Data         1    wreg     unsigned char 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  u8_Data         1    1[COMMON] unsigned char 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         1       0       0       0       0
   861 ;;      Temps:          0       0       0       0       0
   862 ;;      Totals:         1       0       0       0       0
   863 ;;Total ram usage:        1 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    2
   866 ;; This function calls:
   867 ;;		_I2CBegin
   868 ;;		_I2C_End
   869 ;;		_I2C_Write
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _EEPROM_WriteToEEPROM
   877  06B7                     _EEPROM_WriteToEEPROM:
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in _EEPROM_WriteToEEPROM: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   881                           ;EEPROM_WriteToEEPROM@u8_Data stored from wreg
   882  06B7  00F1               	movwf	EEPROM_WriteToEEPROM@u8_Data
   883  06B8                     l786:
   884                           
   885                           ;EEPROM_Prog.c: 26: void EEPROM_WriteToEEPROM (u8 u8_Data);EEPROM_Prog.c: 27: {;EEPROM_P
      +                          rog.c: 28:     I2CBegin() ;
   886  06B8  120A  118A  268B  120A  118A  	fcall	_I2CBegin
   887  06BD                     l788:
   888                           
   889                           ;EEPROM_Prog.c: 30:     I2C_Write(0xA0) ;
   890  06BD  30A0               	movlw	160
   891  06BE  120A  118A  26AA  120A  118A  	fcall	_I2C_Write
   892  06C3                     l790:
   893                           
   894                           ;EEPROM_Prog.c: 31:     I2C_Write(0x00);
   895  06C3  3000               	movlw	0
   896  06C4  120A  118A  26AA  120A  118A  	fcall	_I2C_Write
   897  06C9                     l792:
   898                           
   899                           ;EEPROM_Prog.c: 32:     I2C_Write(u8_Data);
   900  06C9  0871               	movf	EEPROM_WriteToEEPROM@u8_Data,w
   901  06CA  120A  118A  26AA  120A  118A  	fcall	_I2C_Write
   902  06CF                     l794:
   903                           
   904                           ;EEPROM_Prog.c: 33:     I2C_Write(u8_Data);
   905  06CF  0871               	movf	EEPROM_WriteToEEPROM@u8_Data,w
   906  06D0  120A  118A  26AA  120A  118A  	fcall	_I2C_Write
   907                           
   908                           ;EEPROM_Prog.c: 35:     I2C_End() ;
   909  06D5  120A  118A  2694  120A  118A  	fcall	_I2C_End
   910  06DA                     l126:
   911  06DA  0008               	return
   912  06DB                     __end_of_EEPROM_WriteToEEPROM:
   913                           
   914                           	psect	text4
   915  06AA                     __ptext4:	
   916 ;; *************** function _I2C_Write *****************
   917 ;; Defined at:
   918 ;;		line 67 in file "I2C_Prog.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  u8_Data         1    wreg     unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  u8_Data         1    0[COMMON] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         1       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0
   935 ;;      Totals:         1       0       0       0       0
   936 ;;Total ram usage:        1 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    1
   939 ;; This function calls:
   940 ;;		_I2C_Hold
   941 ;; This function is called by:
   942 ;;		_EEPROM_WriteToEEPROM
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           
   947                           ;psect for function _I2C_Write
   948  06AA                     _I2C_Write:
   949                           
   950                           ;incstack = 0
   951                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   952                           ;I2C_Write@u8_Data stored from wreg
   953  06AA  00F0               	movwf	I2C_Write@u8_Data
   954  06AB                     l774:
   955                           
   956                           ;I2C_Prog.c: 67: void I2C_Write (u8 u8_Data );I2C_Prog.c: 68: {;I2C_Prog.c: 69:     I2C_
      +                          Hold();
   957  06AB  120A  118A  269D  120A  118A  	fcall	_I2C_Hold
   958  06B0                     l776:
   959                           
   960                           ;I2C_Prog.c: 70:     (*((volatile u8*)0x13)) = u8_Data ;
   961  06B0  0870               	movf	I2C_Write@u8_Data,w
   962  06B1  00FF               	movwf	btemp+1
   963  06B2  087F               	movf	btemp+1,w
   964  06B3  1283               	bcf	3,5	;RP0=0, select bank0
   965  06B4  1303               	bcf	3,6	;RP1=0, select bank0
   966  06B5  0093               	movwf	19	;volatile
   967  06B6                     l23:
   968  06B6  0008               	return
   969  06B7                     __end_of_I2C_Write:
   970                           
   971                           	psect	text5
   972  0694                     __ptext5:	
   973 ;; *************** function _I2C_End *****************
   974 ;; Defined at:
   975 ;;		line 57 in file "I2C_Prog.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0
   992 ;;      Totals:         0       0       0       0       0
   993 ;;Total ram usage:        0 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    1
   996 ;; This function calls:
   997 ;;		_I2C_Hold
   998 ;; This function is called by:
   999 ;;		_EEPROM_WriteToEEPROM
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _I2C_End
  1005  0694                     _I2C_End:
  1006  0694                     l770:	
  1007                           ;incstack = 0
  1008                           ; Regs used in _I2C_End: [wreg+status,2+status,0+pclath+cstack]
  1009                           
  1010                           
  1011                           ;I2C_Prog.c: 59:    I2C_Hold() ;
  1012  0694  120A  118A  269D  120A  118A  	fcall	_I2C_Hold
  1013  0699                     l772:
  1014                           
  1015                           ;I2C_Prog.c: 60:    ((*((volatile u8*)0x91))) |= (1 << (2)) ;
  1016  0699  1683               	bsf	3,5	;RP0=1, select bank1
  1017  069A  1303               	bcf	3,6	;RP1=0, select bank1
  1018  069B  1511               	bsf	17,2	;volatile
  1019  069C                     l20:
  1020  069C  0008               	return
  1021  069D                     __end_of_I2C_End:
  1022                           
  1023                           	psect	text6
  1024  068B                     __ptext6:	
  1025 ;; *************** function _I2CBegin *****************
  1026 ;; Defined at:
  1027 ;;		line 42 in file "I2C_Prog.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, pclath, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1041 ;;      Params:         0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0
  1043 ;;      Temps:          0       0       0       0       0
  1044 ;;      Totals:         0       0       0       0       0
  1045 ;;Total ram usage:        0 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    1
  1048 ;; This function calls:
  1049 ;;		_I2C_Hold
  1050 ;; This function is called by:
  1051 ;;		_EEPROM_WriteToEEPROM
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _I2CBegin
  1057  068B                     _I2CBegin:
  1058  068B                     l766:	
  1059                           ;incstack = 0
  1060                           ; Regs used in _I2CBegin: [wreg+status,2+status,0+pclath+cstack]
  1061                           
  1062                           
  1063                           ;I2C_Prog.c: 44:      I2C_Hold() ;
  1064  068B  120A  118A  269D  120A  118A  	fcall	_I2C_Hold
  1065  0690                     l768:
  1066                           
  1067                           ;I2C_Prog.c: 45:     ((*((volatile u8*)0x91))) |= (1 << (0)) ;
  1068  0690  1683               	bsf	3,5	;RP0=1, select bank1
  1069  0691  1303               	bcf	3,6	;RP1=0, select bank1
  1070  0692  1411               	bsf	17,0	;volatile
  1071  0693                     l14:
  1072  0693  0008               	return
  1073  0694                     __end_of_I2CBegin:
  1074                           
  1075                           	psect	text7
  1076  069D                     __ptext7:	
  1077 ;; *************** function _I2C_Hold *****************
  1078 ;; Defined at:
  1079 ;;		line 34 in file "I2C_Prog.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; This function calls:
  1100 ;;		Nothing
  1101 ;; This function is called by:
  1102 ;;		_I2CBegin
  1103 ;;		_I2C_End
  1104 ;;		_I2C_Write
  1105 ;;		_I2C_RepeatedStart
  1106 ;;		_I2C_Read
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _I2C_Hold
  1112  069D                     _I2C_Hold:
  1113  069D                     l718:	
  1114                           ;incstack = 0
  1115                           ; Regs used in _I2C_Hold: [wreg+status,2]
  1116                           
  1117  069D                     l8:	
  1118                           ;I2C_Prog.c: 37:     while ( ((*((volatile u8*)0x94)) & 0x04) || ((*((volatile u8*)0x91)
      +                          ) & 0x1F)) ;
  1119                           
  1120  069D  1683               	bsf	3,5	;RP0=1, select bank1
  1121  069E  1303               	bcf	3,6	;RP1=0, select bank1
  1122  069F  1914               	btfsc	20,2	;volatile
  1123  06A0  2EA2               	goto	u11
  1124  06A1  2EA3               	goto	u10
  1125  06A2                     u11:
  1126  06A2  2E9D               	goto	l8
  1127  06A3                     u10:
  1128  06A3                     l720:
  1129  06A3  0811               	movf	17,w	;volatile
  1130  06A4  391F               	andlw	31
  1131  06A5  1D03               	btfss	3,2
  1132  06A6  2EA8               	goto	u21
  1133  06A7  2EA9               	goto	u20
  1134  06A8                     u21:
  1135  06A8  2E9D               	goto	l8
  1136  06A9                     u20:
  1137  06A9                     l11:
  1138  06A9  0008               	return
  1139  06AA                     __end_of_I2C_Hold:
  1140  007E                     btemp	set	126	;btemp
  1141  007E                     wtemp0	set	126
  1142                           
  1143                           	psect	config
  1144                           
  1145                           ;Config register CONFIG @ 0x2007
  1146                           ;	Oscillator Selection bits
  1147                           ;	FOSC = XT, XT oscillator
  1148                           ;	Watchdog Timer Enable bit
  1149                           ;	WDTE = OFF, WDT disabled
  1150                           ;	Power-up Timer Enable bit
  1151                           ;	PWRTE = ON, PWRT enabled
  1152                           ;	Brown-out Reset Enable bit
  1153                           ;	BOREN = ON, BOR enabled
  1154                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1155                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1156                           ;	Data EEPROM Memory Code Protection bit
  1157                           ;	CPD = OFF, Data EEPROM code protection off
  1158                           ;	Flash Program Memory Write Enable bits
  1159                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1160                           ;	In-Circuit Debugger Mode bit
  1161                           ;	DEBUG = 0x1, unprogrammed default
  1162                           ;	Flash Program Memory Code Protection bit
  1163                           ;	CP = OFF, Code protection off
  1164  2007                     	org	8199
  1165  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _I2C_Init->_DIO_SetPinDirection
    _EEPROM_WriteToEEPROM->_I2C_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     658
                                              5 COMMON     4     4      0
               _EEPROM_WriteToEEPROM
                           _I2C_Init
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0     612
                _DIO_SetPinDirection
 ---------------------------------------------------------------------------------
 (2) _DIO_SetPinDirection                                  5     3      2     612
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteToEEPROM                                 1     1      0      45
                                              1 COMMON     1     1      0
                           _I2CBegin
                            _I2C_End
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2C_End                                              0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (2) _I2CBegin                                             0     0      0       0
                           _I2C_Hold
 ---------------------------------------------------------------------------------
 (3) _I2C_Hold                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_WriteToEEPROM
     _I2CBegin
       _I2C_Hold
     _I2C_End
       _I2C_Hold
     _I2C_Write
       _I2C_Hold
   _I2C_Init
     _DIO_SetPinDirection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       B      12        0.0%
ABS                  0      0       B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jul 10 16:29:39 2020

                              l5 0725                                l8 069D               __size_of_I2C_Write 000D  
                             l11 06A9                               l20 069C                               l14 0693  
                             l23 06B6                               l55 07EF                               l65 07EF  
                             u10 06A3                               u11 06A2                               u20 06A9  
                             u21 06A8                              l126 06DA                              l720 06A3  
                            l718 069D                              l770 0694                              l772 0699  
                            l766 068B                              l774 06AB                              l790 06C3  
                            l768 0690                              l776 06B0                              l792 06C9  
                            l794 06CF                              l786 06B8                              l788 06BD  
                            l982 0739                              l974 0727                              l984 074A  
                            l992 077D                              l976 072D                              l986 075B  
                            l994 0793                              l978 0733                              l988 076C  
                            l998 0799                              u300 072D                              u301 072C  
                            u310 0733                              u311 0732                              u320 0738  
                            u321 0737                              u404 07BF                              u405 07BD  
                            u414 07CF                              u334 073F                              u415 07CD  
                            u335 073D                              u344 0750                              u345 074E  
                            u370 0798                              u354 0761                              u371 0797  
                            u355 075F                              u427 06E4                              u364 0772  
                            u365 0770                              u437 06F7                              u384 079F  
                            u385 079D                              u394 07AF                              u395 07AD  
                __end_of_I2C_End 069D                             l1000 07A9                             l1002 07B9  
                           l1004 07C9                             l1020 070C                             l1022 070F  
                           l1030 06E9                             l1008 07D9                             l1024 071A  
                           l1032 06ED                             l1018 0700                             l1034 06F3  
                           l1026 06DB                             l1028 06E0                             l1076 0785  
                           l1078 07E1                 __end_of_I2CBegin 0694                             _main 06DB  
               __end_of_I2C_Hold 06AA                 __end_of_I2C_Init 0726                             btemp 007E  
                           start 0000                            ?_main 0070                __end_of_I2C_Write 06B7  
                          status 0003                            wtemp0 007E                  __initialization 07F0  
                   __end_of_main 0700   DIO_SetPinDirection@u8PinIdCopy 0070                        ??_I2C_End 0070  
                         ??_main 0075     __size_of_DIO_SetPinDirection 00CA                        ?_I2CBegin 0070  
                   __pdataCOMMON 0079                        ?_I2C_Hold 0070                        ?_I2C_Init 0070  
        __end_of__initialization 07FC                   __pcstackCOMMON 0070    __size_of_EEPROM_WriteToEEPROM 0024  
                     ??_I2CBegin 0070                       ??_I2C_Hold 0070                       ??_I2C_Init 0075  
                     __pmaintext 06DB                          _I2C_End 0694                        _I2C_Write 06AA  
            _DIO_SetPinDirection 0726                          __ptext1 0700                          __ptext2 0726  
                        __ptext3 06B7                          __ptext4 06AA                          __ptext5 0694  
                        __ptext6 068B                          __ptext7 069D                          main@arr 0077  
           end_of_initialization 07FC             ?_DIO_SetPinDirection 0070                 I2C_Write@u8_Data 0070  
                     ?_I2C_Write 0070                __size_of_I2CBegin 0009                __size_of_I2C_Hold 000D  
              __size_of_I2C_Init 0026            ??_DIO_SetPinDirection 0072                    __pidataCOMMON 0689  
            start_initialization 07F0     __end_of_EEPROM_WriteToEEPROM 06DB                      ??_I2C_Write 0070  
                       ?_I2C_End 0070                        ___latbits 0002                         _I2CBegin 068B  
                       _I2C_Hold 069D                         _I2C_Init 0700             _EEPROM_WriteToEEPROM 06B7  
               __size_of_I2C_End 0009            ?_EEPROM_WriteToEEPROM 0070      EEPROM_WriteToEEPROM@u8_Data 0071  
    __end_of_DIO_SetPinDirection 07F0                    __size_of_main 0025                         main@F888 0079  
DIO_SetPinDirection@u8PinDirCopy 0071           ??_EEPROM_WriteToEEPROM 0071  DIO_SetPinDirection@u8PortIdCopy 0074  
