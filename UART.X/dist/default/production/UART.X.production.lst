

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jul 20 12:57:44 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167                           
   168                           	psect	cinit
   169  0013                     start_initialization:	
   170                           ; #config settings
   171                           
   172  0013                     __initialization:
   173                           
   174                           ; Clear objects allocated to COMMON
   175  0013  01F4               	clrf	__pbssCOMMON& (0+127)
   176  0014                     end_of_initialization:	
   177                           ;End of C runtime variable initialization code
   178                           
   179  0014                     __end_of__initialization:
   180  0014  0183               	clrf	3
   181  0015  120A  118A  2835   	ljmp	_main	;jump to C main() function
   182                           
   183                           	psect	bssCOMMON
   184  0074                     __pbssCOMMON:
   185  0074                     _u8_DataRead:
   186  0074                     	ds	1
   187                           
   188                           	psect	cstackCOMMON
   189  0070                     __pcstackCOMMON:
   190  0070                     ?_ISR:
   191  0070                     ??_ISR:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0070                     ?_main:	
   195                           ; 1 bytes @ 0x0
   196                           
   197                           
   198                           ; 2 bytes @ 0x0
   199  0070                     	ds	4
   200  0074                     ??_main:
   201                           
   202                           	psect	maintext
   203  0035                     __pmaintext:	
   204                           ; 1 bytes @ 0x4
   205 ;;
   206 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   207 ;;
   208 ;; *************** function _main *****************
   209 ;; Defined at:
   210 ;;		line 27 in file "main.c"
   211 ;; Parameters:    Size  Location     Type
   212 ;;		None
   213 ;; Auto vars:     Size  Location     Type
   214 ;;		None
   215 ;; Return value:  Size  Location     Type
   216 ;;                  2   79[None  ] int 
   217 ;; Registers used:
   218 ;;		None
   219 ;; Tracked objects:
   220 ;;		On entry : B00/0
   221 ;;		On exit  : 0/0
   222 ;;		Unchanged: 0/0
   223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   224 ;;      Params:         0       0       0       0       0
   225 ;;      Locals:         0       0       0       0       0
   226 ;;      Temps:          0       0       0       0       0
   227 ;;      Totals:         0       0       0       0       0
   228 ;;Total ram usage:        0 bytes
   229 ;; Hardware stack levels required when called:    1
   230 ;; This function calls:
   231 ;;		Nothing
   232 ;; This function is called by:
   233 ;;		Startup code after reset
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           
   238                           ;psect for function _main
   239  0035                     _main:
   240  0035                     l80:	
   241                           ;incstack = 0
   242                           ; Regs used in _main: []
   243                           ;main.c: 29:     while (1)
   244                           
   245  0035                     l81:	
   246                           ;main.c: 31:     {;main.c: 33:     }
   247                           
   248  0035  2835               	goto	l80
   249  0036  120A  118A  2810   	ljmp	start
   250  0039                     __end_of_main:
   251                           
   252                           	psect	text1
   253  0018                     __ptext1:	
   254 ;; *************** function _ISR *****************
   255 ;; Defined at:
   256 ;;		line 77 in file "UART_Prog.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0, btemp+1
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   270 ;;      Params:         0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0
   272 ;;      Temps:          4       0       0       0       0
   273 ;;      Totals:         4       0       0       0       0
   274 ;;Total ram usage:        4 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		Interrupt level 1
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           
   284                           ;psect for function _ISR
   285  0018                     _ISR:
   286  0018                     i1l902:
   287                           
   288                           ;UART_Prog.c: 79:     if ( ((((*((volatile u8*)0x0C))) >> (5)) & 0x01) )
   289  0018  080C               	movf	12,w	;volatile
   290  0019  00F0               	movwf	??_ISR
   291  001A  3005               	movlw	5
   292  001B                     u31_25:
   293  001B  1003               	clrc
   294  001C  0CF0               	rrf	??_ISR,f
   295  001D  3EFF               	addlw	-1
   296  001E  1D03               	skipz
   297  001F  281B               	goto	u31_25
   298  0020  1C70               	btfss	??_ISR,0
   299  0021  2823               	goto	u32_21
   300  0022  2824               	goto	u32_20
   301  0023                     u32_21:
   302  0023  282C               	goto	i1l112
   303  0024                     u32_20:
   304  0024                     i1l904:
   305                           
   306                           ;UART_Prog.c: 80:     {;UART_Prog.c: 81:         u8_DataRead = (*((volatile u8*)0x1A)) ;
   307  0024  081A               	movf	26,w	;volatile
   308  0025  00FF               	movwf	btemp+1
   309  0026  087F               	movf	btemp+1,w
   310  0027  00F4               	movwf	_u8_DataRead
   311  0028                     i1l906:
   312                           
   313                           ;UART_Prog.c: 82:         ((*((volatile u8*)0x0C))) &= ~(1 << (5)) ;
   314  0028  30DF               	movlw	223
   315  0029  00FF               	movwf	btemp+1
   316  002A  087F               	movf	btemp+1,w
   317  002B  058C               	andwf	12,f	;volatile
   318  002C                     i1l112:	
   319                           ;UART_Prog.c: 83:     }
   320                           
   321  002C  0873               	movf	??_ISR+3,w
   322  002D  00FF               	movwf	btemp+1
   323  002E  0872               	movf	??_ISR+2,w
   324  002F  008A               	movwf	10
   325  0030  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
   326  0031  0083               	movwf	3
   327  0032  0EFE               	swapf	btemp,f
   328  0033  0E7E               	swapf	btemp,w
   329  0034  0009               	retfie
   330  0035                     __end_of_ISR:
   331  007E                     btemp	set	126	;btemp
   332  007E                     wtemp0	set	126
   333                           
   334                           	psect	intentry
   335  0004                     __pintentry:	
   336                           ;incstack = 0
   337                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1]
   338                           
   339  0004                     interrupt_function:
   340  007E                     saved_w	set	btemp
   341  0004  00FE               	movwf	btemp
   342  0005  0E03               	swapf	3,w
   343  0006  00F1               	movwf	??_ISR+1
   344  0007  080A               	movf	10,w
   345  0008  00F2               	movwf	??_ISR+2
   346  0009  1283               	bcf	3,5	;RP0=0, select bank0
   347  000A  1303               	bcf	3,6	;RP1=0, select bank0
   348  000B  087F               	movf	btemp+1,w
   349  000C  00F3               	movwf	??_ISR+3
   350  000D  120A  118A  2818   	ljmp	_ISR
   351                           
   352                           	psect	config
   353                           
   354                           ;Config register CONFIG @ 0x2007
   355                           ;	Oscillator Selection bits
   356                           ;	FOSC = XT, XT oscillator
   357                           ;	Watchdog Timer Enable bit
   358                           ;	WDTE = OFF, WDT disabled
   359                           ;	Power-up Timer Enable bit
   360                           ;	PWRTE = ON, PWRT enabled
   361                           ;	Brown-out Reset Enable bit
   362                           ;	BOREN = ON, BOR enabled
   363                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   364                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   365                           ;	Data EEPROM Memory Code Protection bit
   366                           ;	CPD = OFF, Data EEPROM code protection off
   367                           ;	Flash Program Memory Write Enable bits
   368                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   369                           ;	In-Circuit Debugger Mode bit
   370                           ;	DEBUG = 0x1, unprogrammed default
   371                           ;	Flash Program Memory Code Protection bit
   372                           ;	CP = OFF, Code protection off
   373  2007                     	org	8199
   374  2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       5      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jul 20 12:57:44 2020

                     l80 0035                       l81 0035                      _ISR 0018  
                   ?_ISR 0070                     _main 0035                     btemp 007E  
                   start 0010                    ??_ISR 0070                    ?_main 0070  
                  i1l112 002C                    i1l902 0018                    i1l904 0024  
                  i1l906 0028                    u31_25 001B                    u32_20 0024  
                  u32_21 0023                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0013             __end_of_main 0039  
                 ??_main 0074                   saved_w 007E  __end_of__initialization 0014  
         __pcstackCOMMON 0070               __pmaintext 0035               __pintentry 0004  
                __ptext1 0018             __size_of_ISR 001D              _u8_DataRead 0074  
   end_of_initialization 0014      start_initialization 0013              __end_of_ISR 0035  
            __pbssCOMMON 0074                ___latbits 0002        interrupt_function 0004  
          __size_of_main 0004                 intlevel1 0000  
